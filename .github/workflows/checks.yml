# This workflow will build the project with multiple Python versions, lint, run
# tests, and build and push Docker images.
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  Test:
    name: Run linting, unit and integration tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        py-version-img: [
          ["3.8", "3.8-slim-buster"],
          ["3.9", "3.9-slim-buster"],
          ["3.10", "3.10-slim-buster"],
        ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.py-version-img[0] }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py-version-img[0] }}
      - name: Install requirements
        run: |
          pip install -e .
          pip install -r requirements_dev.txt
      - name: Lint with flake8
        run: flake8
      - name: Calculate unit test coverage
        run: |
          coverage run --source trs_filer -m pytest -W ignore::DeprecationWarning
          coverage xml
      - name: Submit Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
      - name: Deploy app
        run: docker-compose up -d --build
      - name: Wait for app startup
        run: sleep 20
      - name: Run integration tests
        shell: bash
        run: pytest tests/integration_tests.py
      - name: Tear down app
        run: docker-compose down

  Publish:
    name: Build and publish app image
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [Test]
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Generate tag
        run: |
          echo "TAG=$(date '+%Y%m%d')" >> $GITHUB_ENV
      - name: Build and publish image
        id: docker
        uses: philips-software/docker-ci-scripts@v5.0.0
        with:
          dockerfile: .
          image-name: "trs-filer"
          tags: "latest ${{ env.TAG }}"
          push-branches: "${{ github.event.repository.default_branch }}"
        env:
          REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_LOGIN }}
          REGISTRY_TOKEN: "${{ secrets.DOCKERHUB_TOKEN }}"
          DOCKER_ORGANIZATION: ${{ secrets.DOCKERHUB_ORG }}
          GITHUB_ORGANIZATION: ${{ github.repository_owner }}
      - name: Verify that image was pushed
        run: |
          echo "Push indicator: ${{ steps.docker.outputs.push-indicator }}"
          echo "# Set to 'true' if image was pushed, empty string otherwise"
          test "${{ steps.docker.outputs.push-indicator }}" == "true"
