# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  test:
    name: Run linting and unit tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8"]
        
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install requirements
      run: |
        pip install -r requirements.txt
        pip install itsdangerous==2.0.1
    - name: Lint with flake8
      run: flake8
    - name: Calculate coverage
      run: |
        coverage run --source trs_filer -m pytest
        coverage xml
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  # publish:
  #   name: Build & Publish
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8
  #   - name: Set docker variables
  #     run: |
  #       export
  #       if [ "$TRAVIS_BRANCH" = "dev" ]; then
  #           export DOCKER_TAG="$(date '+%Y%m%d')"
  #       else
  #           export DOCKER_TAG=${TRAVIS_BRANCH//_/-}
  #           export DOCKER_TAG=${DOCKER_TAG//\//-}
  #       fi
  #   - name: Build docker containers
  #     run: |
  #       docker build . \
  #         -t "${DOCKER_REPO_NAME}:latest" \
  #         -t "${DOCKER_REPO_NAME}:${DOCKER_TAG}"
  #   - name: Set docker token
  #     run: |
  #         echo "${DOCKER_TOKEN}" | \
  #           docker login -u "${DOCKER_USER}" --password-stdin
  #   - name: Push docker image
  #     run: docker push "${DOCKER_REPO_NAME}:${DOCKER_TAG}"
  #   - name: Set tag for dev release
  #     run: |
  #       if [ "$TRAVIS_BRANCH" = "dev" ]; then
  #         docker push "${DOCKER_REPO_NAME}:latest"
  #       fi
  #   - name: Delete token
  #     run: rm ${HOME}/.docker/config.json
