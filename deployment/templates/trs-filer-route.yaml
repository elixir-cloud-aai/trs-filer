{{ if eq .Values.clusterType "openshift" }}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ .Values.trs_filer.appName }}
spec:
  host: {{ .Values.host_name }}
  port:
    targetPort: {{ .Values.trs_filer.appName }}
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ .Values.trs_filer.appName }}
    weight: 100
  wildcardPolicy: None
status:
  ingress: []
{{ else if eq .Values.clusterType "kubernetes" }}
{{ if .Values.kubernetes.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    {{ if .Values.kubernetes.ingress.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.kubernetes.https.issuer }}
    kubernetes.io/tls-acme: "true"
    {{ end }}
  name: {{ .Values.trs_filer.appName }}-ingress
spec:
  rules:
  - host: {{ .Values.host_name }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Values.trs_filer.appName }}
            port:
              number: 8080
        path: /
        pathType: Prefix
{{ if .Values.kubernetes.https.enabled }}
  tls:
  - hosts:
    - {{ .Values.host_name }}
    secretName: {{ .Values.trs_filer.appName }}-ingress-secret
{{ end }}
{{ end }}
{{ end }}