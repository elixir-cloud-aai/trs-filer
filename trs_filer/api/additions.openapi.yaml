paths:
  /tools:
    post:
      summary: Add a tool.
      description: Create a tool object with a randomly generated unique ID.
      operationId: postTool
      tags:
        - TRS-Filer
      requestBody:
        description: Tool (meta)data to add.
        required: true
        content:
          application/json:
            schema:
              x-body-name: tool
              $ref: '#/components/schemas/ToolRegister'
      responses:
        '200':
          description: The tool was successfully created.
          content:
            application/json:
              schema:
                description: Tool identifier.
                type: string
        '400':
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/tools/{id}":
    put:
      summary: Add or update a tool.
      description: Create a tool object with a predefined ID. Overwrites any
        existing tool object with the same ID.
      operationId: putTool
      tags:
        - TRS-Filer
      parameters:
        - name: id
          in: path
          required: true
          description: A unique identifier of the tool, scoped to this registry,
            for example `123456`.
          schema:
            type: string
      requestBody:
        description: Tool (meta)data to add.
        required: true
        content:
          application/json:
            schema:
              x-body-name: tool
              $ref: '#/components/schemas/ToolRegister'
      responses:
        '200':
          description: The tool was successfully created/updated.
          content:
            application/json:
              schema:
                description: Tool identifier.
                type: string
        '400':
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a tool.
      description: Delete an existing tool object.
      operationId: deleteTool
      tags:
        - TRS-Filer
      parameters:
        - name: id
          in: path
          required: true
          description: A unique identifier of the tool, scoped to this registry,
            for example `123456`.
          schema:
            type: string
      responses:
        '200':
          description: The tool was successfully deleted.
          content:
            application/json:
              schema:
                type: string
                description: Identifier of deleted tool.
        '400':
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The requested tool was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/tools/{id}/versions":
    post:
      summary: Add or update a tool version.
      description: Create or update a tool version object.
      operationId: postToolVersion
      tags:
        - TRS-Filer
      parameters:
        - name: id
          in: path
          required: true
          description: A unique identifier of the tool, scoped to this registry,
            for example `123456`.
          schema:
            type: string
      requestBody:
        description: Tool version (meta)data to add.
        required: true
        content:
          application/json:
            schema:
              x-body-name: tool_version
              $ref: '#/components/schemas/ToolVersionRegister'
      responses:
        '200':
          description: The tool version was successfully created.
          content:
            application/json:
              schema:
                description: Tool version identifier.
                type: string
        '400':
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  "/tools/{id}/versions/{version_id}":
    delete:
      summary: Delete a tool version.
      description: Delete an existing tool version object.
      operationId: deleteToolVersion
      tags:
        - TRS-Filer
      parameters:
        - name: id
          in: path
          required: true
          description: A unique identifier of the tool, scoped to this registry,
            for example `123456`.
          schema:
            type: string
        - name: version_id
          in: path
          required: true
          description: An identifier of the tool version for this particular
            tool registry, for example `v1`.
          schema:
            type: string
      responses:
        '200':
          description: The tool version was successfully deleted.
          content:
            application/json:
              schema:
                description: Identifier of deleted tool version.
                type: string
        '400':
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The requested tool was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ToolClass:
      type: object
      description: Describes a class (type) of tool allowing us to categorize
        workflows, tasks, and maybe even other entities (such as services)
        separately.
      properties:
        id:
          type: string
          description: The unique identifier for the class.
        name:
          type: string
          description: A short friendly name for the class.
        description:
          type: string
          description: A longer explanation of what this class is and what it can
            accomplish.
    ToolRegister:
      type: object
      description: A tool (or described tool) is defined as a tuple of a
        descriptor file (which potentially consists of multiple files), a set of
        container images, and a set of instructions for creating those images.
      required:
        - organization
        - toolclass
        - versions
      properties:
        aliases:
          type: array
          items:
            type: string
          example:
            - 630d31c3-381e-488d-b639-ce5d047a0142
            - dockstore.org:630d31c3-381e-488d-b639-ce5d047a0142
            - bio.tools:630d31c3-381e-488d-b639-ce5d047a0142
          description: >-
            Support for this parameter is optional for tool registries that
            support aliases. A list of strings that can be used to identify
            this tool which could be straight up URLs. This can be used to
            expose alternative ids (such as GUIDs) for a tool for registries.
            Can be used to match tools across registries.
        organization:
          type: string
          description: The organization that published the image.
        name:
          type: string
          description: The name of the tool.
        toolclass:
          $ref: "#/components/schemas/ToolClass"
        description:
          type: string
          description: The description of the tool.
        has_checker:
          type: boolean
          description: Whether this tool has a checker tool associated with it.
        checker_url:
          type: string
          description: Optional url to the checker tool that will exit
            successfully if this tool produced the expected result given test
            data.
        versions:
          description: A list of versions for this tool.
          type: array
          items:
            $ref: "#/components/schemas/ToolVersionRegister"
    ToolVersionRegister:
      type: object
      description: A tool version describes a particular iteration of a tool as
        described by a reference to a specific image and/or documents.
      properties:
        author:
          type: array
          items:
            type: string
          description: Contact information for the author of this version of
            the tool in the registry. (More complex authorship information is
            handled by the descriptor).
        name:
          type: string
          description: The name of the version.
        id:
          type: string
          description: A unique identifier of the version of this tool for this
            particular tool registry. If not provided, will be auto-generated
            by the implementation. Note that a `BadRequest` will be returned if
            multiple versions with the same `id` properties are provided.
          example: v1
        is_production:
          type: boolean
          description: This version of a tool is guaranteed to not change over
            time (for example, a  tool built from a tag in git as opposed to a
            branch). A production quality tool  is required to have a checksum.
        images:
          description: All known docker images (and versions/hashes) used by
            this tool. If the tool has to evaluate any of the docker images
            strings at runtime, those ones cannot be reported here.
          type: array
          items:
            $ref: "#/components/schemas/ImageData"
        descriptor_type:
          type: array
          description: The type (or types) of descriptors available.
          items:
            $ref: "#/components/schemas/DescriptorType"
        containerfile:
          type: boolean
          description: Reports if this tool has a containerfile available. (For
            Docker-based tools, this would indicate the presence of a
            Dockerfile).
        verified:
          type: boolean
          description: Reports whether this tool has been verified by a
            specific organization or individual.
        verified_source:
          type: array
          items:
            type: string
          description: Source of metadata that can support a verified tool,
            such as an email or URL.
        signed:
          type: boolean
          description: Reports whether this version of the tool has been
            signed.
        included_apps:
          description: An array of IDs for the applications that are stored
            inside this tool.
          example:
            - https://bio.tools/tool/mytum.de/SNAP2/1
            - https://bio.tools/bioexcel_seqqc
          type: array
          items:
            type: string
        files:
          description: Properties and (pointers to) contents of files
            associated with a tool.
          type: array
          items:
            $ref: "#/components/schemas/Files"
    Files:
      type: object
      description: Properties and (a pointer to the) contents of a file.
      properties:
        toolFile:
          $ref: '#/components/schemas/ToolFile'
        fileWrapper:
          $ref: '#/components/schemas/FileWrapper'
